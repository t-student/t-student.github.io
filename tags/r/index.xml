<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on t-student</title>
    <link>https://t-student.github.io/tags/r/</link>
    <description>Recent content in R on t-student</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Tue, 24 Jul 2018 00:00:00 +1000</lastBuildDate>
    
	<atom:link href="https://t-student.github.io/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Receiver Operator Characteristic Curves</title>
      <link>https://t-student.github.io/post/receiver_operator_char_curve/</link>
      <pubDate>Tue, 24 Jul 2018 00:00:00 +1000</pubDate>
      
      <guid>https://t-student.github.io/post/receiver_operator_char_curve/</guid>
      <description>Context Logistic regression can be used as a classifier for a dichotomous outcomes (live/die), but ultimately you need to specify the threshold probability that demarcates outcomes.
The SMPracticals R package contains bliss, a dataset detailing the number of adult flour beetles which died following a 5-hour exposure to gaseous carbon disulphide. Here the outcomes are died versus lived, with died as the success evemt. The data is aggregated showing number of beetles that died at a given dose, but we the individual trials.</description>
    </item>
    
    <item>
      <title>Competing Risks in R</title>
      <link>https://t-student.github.io/post/competingrisk01/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 +1000</pubDate>
      
      <guid>https://t-student.github.io/post/competingrisk01/</guid>
      <description>Competing risk happen when you have multiple risks that can distort your analysis of some measure. For example, if you are trying to estimate the time to relapse of a disease some patients will be censored by loss to follow up or the study ending, others may die. Time to relapse and death are competing risks.
When analysing CR we use cumulative incidence. Cumulative incidence is just the probability of an event by a particular time.</description>
    </item>
    
    <item>
      <title>Statistical Rethinking - Introduction and Sampling</title>
      <link>https://t-student.github.io/post/rethinking01/</link>
      <pubDate>Sat, 26 May 2018 00:00:00 +1000</pubDate>
      
      <guid>https://t-student.github.io/post/rethinking01/</guid>
      <description>Statistical Rethinking is a great book for learning about Bayesian Modelling. In this first post of quite a few I am going to summarise some key points from the first three chapters, but mostly chapter 2 and 3. It is intended as a quick-ish reference so I will be skimming over a lot of content.
Table of Contents Likelihood Parameters Prior Posterior Grid Approximation Quadratic Approximation Sampling Loss Functions Sampling to Simulate  I like examples so let&amp;rsquo;s dive in with the proportion of water covering the globe problem, hereafter the water/globe problem.</description>
    </item>
    
    <item>
      <title>Using apply functions in R</title>
      <link>https://t-student.github.io/post/apply01/</link>
      <pubDate>Tue, 22 May 2018 00:00:00 +1000</pubDate>
      
      <guid>https://t-student.github.io/post/apply01/</guid>
      <description>Here is a simple for loop as might be used in a simulation. This is just the first layer and produces one instance of the data. We would run this function a large number of times in our simulation. The function takes some parameters and generates a series of values in each time period. All of data is accumulated in a data.frame which is returned at the end of the function.</description>
    </item>
    
    <item>
      <title>The emmeans package</title>
      <link>https://t-student.github.io/post/emmeansr01-md/</link>
      <pubDate>Wed, 09 May 2018 00:00:00 +1000</pubDate>
      
      <guid>https://t-student.github.io/post/emmeansr01-md/</guid>
      <description>The emmeans package in R is a replacement for lsmeans. This is the start of a self-instruct/destruct bare bones essentials line on how to use emmeans.
https://stackoverflow.com/questions/31707941/how-do-i-change-the-default-library-path-for-r-packages</description>
    </item>
    
    <item>
      <title>Rationalising Odds Ratios Results</title>
      <link>https://t-student.github.io/post/logistic01-ors/</link>
      <pubDate>Thu, 03 May 2018 00:00:00 +1000</pubDate>
      
      <guid>https://t-student.github.io/post/logistic01-ors/</guid>
      <description>You have just fitted a logistic regression model in R using glm. Your results suggest that treatment group membership (active versus placebo) is strongly associated with the probability of being able to endure open-plan offices, micro-management and your fellow comrades 5 days a week. For the sake of realism, let&amp;rsquo;s assume the active treatment is a (very) powerful anti-psychotic and that it has been randomised to a simple random sample of employees.</description>
    </item>
    
    <item>
      <title>Citation Tools - Zotero</title>
      <link>https://t-student.github.io/post/zotero01/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +1000</pubDate>
      
      <guid>https://t-student.github.io/post/zotero01/</guid>
      <description>Zotero looks like it might be a good replacement for Mendeley, which quite frankly is a complete waste of everyones time. Zotero is cross platform, seems reasonably well supported as suggested from the helpful information provided in the discussion forums and has extension options via plugins. This latter feature is of interest to me as I my setup involves retaining my collection meta data in one place and my pdf files on a dropbox account.</description>
    </item>
    
    <item>
      <title>Date Anomolies</title>
      <link>https://t-student.github.io/post/dates01/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +1000</pubDate>
      
      <guid>https://t-student.github.io/post/dates01/</guid>
      <description>As we all know, dates can be a harrowing/boarderline traumatic experience. Here I give a condensed and hopefully rapid overview of dates in R.
There are multiple date classes in R. The simplest is the Date class, but there are also POSIXt dates and a relatively recent Lubridate package.
Date Class These are the `easy&amp;rsquo; ones to deal with and are stored internally as integers from 1970-01-01.
as.Date(&amp;quot;2017-01-12&amp;quot;) as.Date(&amp;quot;2017-24-01&amp;quot;, format = &amp;quot;%Y-%d-%m&amp;quot;) # Alternative origin - i.</description>
    </item>
    
    <item>
      <title>Propensity Scores 101</title>
      <link>https://t-student.github.io/post/propensity01/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +1000</pubDate>
      
      <guid>https://t-student.github.io/post/propensity01/</guid>
      <description>A propensity score is just the probability of receiving treatment - we have:
$$ Propensity \ Score = \pi_i = Pr(trt = 1|X_i) $$
So if we had a single (pre-treatment) covariate, say age, on which the propensity score was computed we may have that older people were more likely to receive the treatment.
Now, it can be the case that two people with different covariate values have the same probability of treatment (i.</description>
    </item>
    
    <item>
      <title>That is Multinomial Regression?</title>
      <link>https://t-student.github.io/post/multinomial0/</link>
      <pubDate>Sun, 15 Apr 2018 00:00:00 +1000</pubDate>
      
      <guid>https://t-student.github.io/post/multinomial0/</guid>
      <description>Ref: https://www3.nd.edu/~rwilliam/stats3/Mlogit1.pdf
Think about a sample of zombies (I know, sorry) that fall into mutually exclusive species1. You know, maybe we have violently hairy zombnies, zombies that seem to make disturbing small talk at formal functions and zombies that you just wouldn&amp;rsquo;t want to wake up next to. Let&amp;rsquo;s label these zombie types as type I, II and III and lets call non-zombies type 0. Now, we have data on a biomarker (mesured on a continuous scale from 0 to 300) obtained from the sample and we think that the level of this biomarker can be used to identify type 0, I, II and III (non)-zombies.</description>
    </item>
    
    <item>
      <title>Inverse transform sampling</title>
      <link>https://t-student.github.io/post/inversecdfrand/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +1000</pubDate>
      
      <guid>https://t-student.github.io/post/inversecdfrand/</guid>
      <description>Imagine you are in the perilous and life threatening situation of being asked to generate random numbers. Compounding the peril is that we have also been asked to ensure that the probability of choosing a given number is linearly proportional to its magnitude.
OK, let&amp;rsquo;s start by imagining what the probability density function will look like - probably something list this:
The area under the pdf must integrate to 1 so if the pdf is a linearly increasing function with support (arbitrarily say) 0 to 3.</description>
    </item>
    
    <item>
      <title>Shiny Stage 4 - Dynamic Dashboards</title>
      <link>https://t-student.github.io/post/shiny01-dyndash/</link>
      <pubDate>Tue, 10 Apr 2018 00:00:00 +1000</pubDate>
      
      <guid>https://t-student.github.io/post/shiny01-dyndash/</guid>
      <description>Dashboards extend the functionality of shiny. Shiny uses Bootstrap for layout whereas Shinydashboard uses AdminLTE, which is a theme built on top of Bootstrap. Here is a basic template - every dashboard must have the header, sidebar and body. However, these can be hidden if necessary.
library(shiny) library(shinydashboard) ui &amp;lt;- dashboardPage( dashboardHeader(), dashboardSidebar(), dashboardBody() ) server &amp;lt;- function(input, output){ } shinyApp(ui, server)  Before we go any further, I should note, the docs are here.</description>
    </item>
    
    <item>
      <title>Shiny 101</title>
      <link>https://t-student.github.io/post/shiny01-overview/</link>
      <pubDate>Mon, 09 Apr 2018 00:00:00 +1000</pubDate>
      
      <guid>https://t-student.github.io/post/shiny01-overview/</guid>
      <description>Shiny is a way to deploy your data analyses in an interactive format that is backed by R.
Overview - Think inputs and outputs Shiny applications comprise a user interface in the form of a web page (generated from R code), a backend server (that can be hosted on your local machine).
Before we begin, your goto page for learning about this stuff is https://shiny.rstudio.com/articles/. Ok, let&amp;rsquo;s build an app - use this template:</description>
    </item>
    
    <item>
      <title>Shiny Stage 2 - Reactivity</title>
      <link>https://t-student.github.io/post/shiny01-stage2/</link>
      <pubDate>Mon, 09 Apr 2018 00:00:00 +1000</pubDate>
      
      <guid>https://t-student.github.io/post/shiny01-stage2/</guid>
      <description>Shiny is a way to deploy your data analyses in an interactive format that is backed by R.
In an earlier post we went over how to get a basic Shiny app together and deployed to shinyapps.io. Now we will look more at reactivity and customise appearance using tech like html5 and css from within RStudio. Specifically, we put a bit more focus onto the server side.
Table of Contents   Customising Reactions  reactive isolate  Server-side Triggers Delay Reactions with eventReactive Manage State with reactiveValues   Customising Reactions So earlier we saw that we can update various outputs based on a users input.</description>
    </item>
    
    <item>
      <title>Shiny Stage 3 - UI customisation</title>
      <link>https://t-student.github.io/post/shiny01-stage3/</link>
      <pubDate>Mon, 09 Apr 2018 00:00:00 +1000</pubDate>
      
      <guid>https://t-student.github.io/post/shiny01-stage3/</guid>
      <description>OK, so we have gone over the basic setup and dug a bit more into the reactivity functionality. Now we are going to look at UI extensions aka html5 and css.
Working with the HTML The functions in the UI create HTML. So why don&amp;rsquo;t we add some static content? Shiny comes with a series of tags functions that will create HTML for you. Here is an example:
library(shiny) ui &amp;lt;- fluidPage( # a tag is an anchor tags$h1(&amp;quot;Title 1&amp;quot;), tags$a(href = &amp;quot;www.</description>
    </item>
    
    <item>
      <title>Bayesian Zombies 101</title>
      <link>https://t-student.github.io/post/basicbayesian/</link>
      <pubDate>Sun, 08 Apr 2018 00:00:00 +1000</pubDate>
      
      <guid>https://t-student.github.io/post/basicbayesian/</guid>
      <description>I find the Statistical Rethinking text very helpful in conveying Bayesian concepts. Here I simply try to condense some of the introductory material. The text is supported with R and Python implementations and there is a youtube lecture series on which the text is based.
OK, Bayesian Analysis? Let&amp;rsquo;s start with inference. What we are talking about here is about using the information available to you in order to arrive at rational conclusions that your mum still won&amp;rsquo;t have a bar of.</description>
    </item>
    
    <item>
      <title>Logistic Regression - Power Analysis</title>
      <link>https://t-student.github.io/post/logistic01-powersim/</link>
      <pubDate>Fri, 16 Feb 2018 00:00:00 +1100</pubDate>
      
      <guid>https://t-student.github.io/post/logistic01-powersim/</guid>
      <description>If you have multiple treatment options that lead to different outcomes, you will only be able to detect a difference in the average outcome under conditions where there is sufficient statistical power to do so. Statistical power is the probability that we detect an effect when there really is an effect to be detected. As statistical power increases the probability of making a Type II error (concluding there is no effect when, in fact, there is one) decreases.</description>
    </item>
    
    <item>
      <title>Interpreting Interaction Terms in a GLM (Binomial family, logit link) - Logistic Regression</title>
      <link>https://t-student.github.io/post/logistic01-interaction/</link>
      <pubDate>Wed, 14 Feb 2018 00:00:00 +1100</pubDate>
      
      <guid>https://t-student.github.io/post/logistic01-interaction/</guid>
      <description>The following code simulates events (deaths) from a known model for two groups over three time points. We adopt the view that the effects of time are linear. So, we have deaths acorss two groups (0 = control, 1 = treatment) at three time points (0 = baseline, 1 = 1 year in, 2 = 2 years in). We pre-specify a linear predictor relating group membership and timepoint to the probability of death and then generate bernouli trials based on these probabilities.</description>
    </item>
    
    <item>
      <title>Interpreting Interaction Terms in a GLM (Poisson family, log link)</title>
      <link>https://t-student.github.io/post/poisson01-interaction/</link>
      <pubDate>Wed, 14 Feb 2018 00:00:00 +1100</pubDate>
      
      <guid>https://t-student.github.io/post/poisson01-interaction/</guid>
      <description>The following code constructs a hypothetical dataset describing the count of events observed in two groups (0 = control, 1 = treatment) at two times (0 = baseline, 1 = follow up) with means defined through a pre-specified model.
set.seed(250)# Define the parameters b0 &amp;lt;- 2b1 &amp;lt;- 3b2 &amp;lt;- 1.5b3 &amp;lt;- 6n &amp;lt;- 800grp &amp;lt;- c(rep(0, n/2), rep(1, n/2))time &amp;lt;- c(rep(0, n/4), rep(1, n/4), rep(0, n/4), rep(1, n/4))# Model for the means lambda &amp;lt;- b0 + b1 * grp + b2 * time + b3 * grp * timedf.</description>
    </item>
    
    <item>
      <title>Simulating Lung Cancer Incidence data in R</title>
      <link>https://t-student.github.io/post/data01-cancer/</link>
      <pubDate>Sat, 10 Feb 2018 00:00:00 +1100</pubDate>
      
      <guid>https://t-student.github.io/post/data01-cancer/</guid>
      <description>The world is now awash in data, but sometimes it is useful to roll your own. For example, you may to look at &amp;lsquo;what if&amp;rsquo; scenarios. Here I use publically available information on the age-class-distribution, rates of smoking and incidence of smoking to form a dataset that we will use in a later modelling exercise. In order to do this I use the simstudy and data.table R packages.
Distribution of lung cancer incidence in Australia The Australian Institute of Health and Welfare publish incidence and mortality data.</description>
    </item>
    
    <item>
      <title>A brms implementation of the analysis presented in &#34;Bayesian linear mixed models using Stan: A tutorial for psychologists, linguists, and cognitive scientists&#34;</title>
      <link>https://t-student.github.io/post/brms01/</link>
      <pubDate>Fri, 19 Jan 2018 00:00:00 +1100</pubDate>
      
      <guid>https://t-student.github.io/post/brms01/</guid>
      <description>The title was stolen directly from the excellent 2016 paper by Tanner Sorensen and Shravan Vasishth. Here I recreate their analysis using brms R package, primarily as a self-teach exercise. I am going to very much assume that the basic ideas of Bayesian analysis are already understood. I will add some informtion on prior and posterior predictive checks because I think not doing so missing a large part of the point of a Bayesian analysis.</description>
    </item>
    
  </channel>
</rss>